// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UploadProject.Data;

#nullable disable

namespace UploadProject.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("UploadProject.Models.AdminUploadedFile", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CompetitionSessionID")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserID")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("CompetitionSessionID");

                    b.HasIndex("UserID");

                    b.ToTable("AdminUploadedFiles");
                });

            modelBuilder.Entity("UploadProject.Models.CompetitionSession", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("DayNumber")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("CompetitionSessions");

                    b.HasData(
                        new
                        {
                            ID = new Guid("87392a53-922a-416d-aa8d-546e36d3b84c"),
                            DayNumber = 1,
                            EndDateTime = new DateTime(2023, 5, 23, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            Name = "Desktop 1",
                            StartDateTime = new DateTime(2023, 5, 23, 12, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = new Guid("9284d533-bdd5-4553-bcfd-5f099870fce2"),
                            DayNumber = 2,
                            EndDateTime = new DateTime(2023, 5, 24, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Desktop 2",
                            StartDateTime = new DateTime(2023, 5, 24, 8, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = new Guid("a749079e-b5fe-4ade-83ae-be472c2715c8"),
                            DayNumber = 2,
                            EndDateTime = new DateTime(2023, 5, 24, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Android",
                            StartDateTime = new DateTime(2023, 5, 24, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("UploadProject.Models.CompetitorUploadedFile", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CompetitionSessionID")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserID")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("CompetitionSessionID");

                    b.HasIndex("UserID");

                    b.ToTable("CompetitorUploadedFiles");
                });

            modelBuilder.Entity("UploadProject.Models.User", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CompetitionSessionID")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("CompetitionSessionID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            ID = new Guid("80d976c3-905d-4344-87b1-62877891b44f"),
                            IsAdmin = true,
                            Password = "WeLoveITSSBIndonesia",
                            Username = "admin"
                        },
                        new
                        {
                            ID = new Guid("3d8f92b6-1fc8-4ba5-bcd2-1d75a866c061"),
                            IsAdmin = true,
                            Password = "WeLoveITSSBIndonesia",
                            Username = "admin2"
                        },
                        new
                        {
                            ID = new Guid("9845c938-d935-44e0-bac0-add5638b8a02"),
                            IsAdmin = false,
                            Password = "WDHTFU6Q",
                            Username = "PC01"
                        },
                        new
                        {
                            ID = new Guid("6c4f21aa-c3e6-469e-b154-366e96be9351"),
                            IsAdmin = false,
                            Password = "5XJFAKLB",
                            Username = "PC02"
                        },
                        new
                        {
                            ID = new Guid("eaf4d9b7-7956-4833-9959-bb9571b2ddc3"),
                            IsAdmin = false,
                            Password = "51H4TN0L",
                            Username = "PC03"
                        },
                        new
                        {
                            ID = new Guid("6b9002c5-2141-483b-8470-694647f1ab3a"),
                            IsAdmin = false,
                            Password = "FHDRIXVL",
                            Username = "PC04"
                        },
                        new
                        {
                            ID = new Guid("e6138f0a-04cb-47d2-bb28-64a981100d44"),
                            IsAdmin = false,
                            Password = "6ULC3F0K",
                            Username = "PC05"
                        },
                        new
                        {
                            ID = new Guid("d8482f6f-29ff-42e2-bc0a-d4e8bd949d71"),
                            IsAdmin = false,
                            Password = "CFBEVZN4",
                            Username = "PC06"
                        },
                        new
                        {
                            ID = new Guid("4e88380a-f6c8-42c3-b02d-858e5d19191a"),
                            IsAdmin = false,
                            Password = "LM4E7A0U",
                            Username = "PC07"
                        },
                        new
                        {
                            ID = new Guid("aa7dc3f2-066d-4125-9957-8db0781a1b61"),
                            IsAdmin = false,
                            Password = "7WYP5F16",
                            Username = "PC08"
                        },
                        new
                        {
                            ID = new Guid("72cbfdb5-89e6-41b7-9f9c-4fe348aad03e"),
                            IsAdmin = false,
                            Password = "O4R2JXU1",
                            Username = "PC09"
                        },
                        new
                        {
                            ID = new Guid("b6142238-7543-401b-9bab-9ba31abfe820"),
                            IsAdmin = false,
                            Password = "JZAGP3BK",
                            Username = "PC10"
                        },
                        new
                        {
                            ID = new Guid("398fc3e2-1aa6-4cd7-b9da-c1de0402e649"),
                            IsAdmin = false,
                            Password = "WUN6XHB0",
                            Username = "PC11"
                        },
                        new
                        {
                            ID = new Guid("99aa085b-b335-4a45-a973-3b3461dffe47"),
                            IsAdmin = false,
                            Password = "T7E9ZG53",
                            Username = "PC12"
                        },
                        new
                        {
                            ID = new Guid("054bdf2e-f5fc-4419-a32a-87ba7177115b"),
                            IsAdmin = false,
                            Password = "7XYUSPHQ",
                            Username = "PC13"
                        },
                        new
                        {
                            ID = new Guid("75c83891-dc00-4f11-abf7-00ad306baea8"),
                            IsAdmin = false,
                            Password = "RY6TICPM",
                            Username = "PC14"
                        },
                        new
                        {
                            ID = new Guid("e9c48db4-5712-4f4b-bb2f-3a191402cd67"),
                            IsAdmin = false,
                            Password = "Z574TCEB",
                            Username = "PC15"
                        },
                        new
                        {
                            ID = new Guid("14dbb9f6-b790-41ea-b897-5b729e0fc2d9"),
                            IsAdmin = false,
                            Password = "AMUP204N",
                            Username = "PC16"
                        },
                        new
                        {
                            ID = new Guid("4d48bb92-52c0-4bc8-aeea-9c11ae31816e"),
                            IsAdmin = false,
                            Password = "EDHWLKFR",
                            Username = "PC17"
                        },
                        new
                        {
                            ID = new Guid("8d48cb19-3767-41df-afeb-5142ba16bf57"),
                            IsAdmin = false,
                            Password = "CBKZFE25",
                            Username = "PC18"
                        },
                        new
                        {
                            ID = new Guid("1e215475-1af5-4260-987b-190591001599"),
                            IsAdmin = false,
                            Password = "8OQ2TLX3",
                            Username = "PC19"
                        },
                        new
                        {
                            ID = new Guid("d276f729-359b-43d1-bb68-257b42510a83"),
                            IsAdmin = false,
                            Password = "TJCEK0BY",
                            Username = "PC20"
                        },
                        new
                        {
                            ID = new Guid("58dce682-5a37-4c59-a6d4-c9a206aaf77e"),
                            IsAdmin = false,
                            Password = "C3HYVEN8",
                            Username = "PC21"
                        },
                        new
                        {
                            ID = new Guid("b7ec5b15-57bf-46d3-a753-834d058d7ff8"),
                            IsAdmin = false,
                            Password = "9NB7SX4D",
                            Username = "PC22"
                        },
                        new
                        {
                            ID = new Guid("97b34436-feed-4cc0-bb9e-4c8809a57e90"),
                            IsAdmin = false,
                            Password = "XG2LMPQH",
                            Username = "PC23"
                        },
                        new
                        {
                            ID = new Guid("4e3710ff-c7ae-44af-bb56-fa72037fe347"),
                            IsAdmin = false,
                            Password = "K3U4NVTE",
                            Username = "PC24"
                        },
                        new
                        {
                            ID = new Guid("29aa894c-a723-4301-ae39-b2164993fa10"),
                            IsAdmin = false,
                            Password = "2VSYQ6OR",
                            Username = "PC25"
                        },
                        new
                        {
                            ID = new Guid("45adbb25-083d-4648-b784-201b602a3c59"),
                            IsAdmin = false,
                            Password = "OFMVWPSJ",
                            Username = "PC26"
                        },
                        new
                        {
                            ID = new Guid("587b636b-94d4-4700-9f2a-038174352663"),
                            IsAdmin = false,
                            Password = "BSTYZKAV",
                            Username = "PC27"
                        },
                        new
                        {
                            ID = new Guid("6896aef6-78e2-449e-9711-7154631c7625"),
                            IsAdmin = false,
                            Password = "V1LC78K9",
                            Username = "PC28"
                        },
                        new
                        {
                            ID = new Guid("d962bc97-fdd8-4741-aaa2-e67eb4709ae1"),
                            IsAdmin = false,
                            Password = "7K0AF5WE",
                            Username = "PC29"
                        },
                        new
                        {
                            ID = new Guid("ccfb77cf-28ed-4280-9ace-153de918f10d"),
                            IsAdmin = false,
                            Password = "U12MGQKZ",
                            Username = "PC30"
                        },
                        new
                        {
                            ID = new Guid("96f8a7cd-ca9c-4337-ae34-7c9286f23747"),
                            IsAdmin = false,
                            Password = "27W09B1T",
                            Username = "PC31"
                        },
                        new
                        {
                            ID = new Guid("f4efab89-f698-4417-9296-3656f3b6936f"),
                            IsAdmin = false,
                            Password = "9IWNOYRJ",
                            Username = "PC32"
                        },
                        new
                        {
                            ID = new Guid("60b7f2b1-ff1c-48f2-84d4-3a04f9a296a2"),
                            IsAdmin = false,
                            Password = "J1UK3L98",
                            Username = "PC33"
                        },
                        new
                        {
                            ID = new Guid("0f965ebb-2cde-4b6c-9713-6a376cd58826"),
                            IsAdmin = false,
                            Password = "TI3H0GBY",
                            Username = "PC34"
                        },
                        new
                        {
                            ID = new Guid("1ef81564-a13d-4186-8ddb-413fd7cec588"),
                            IsAdmin = false,
                            Password = "H79ZX4AJ",
                            Username = "PC35"
                        },
                        new
                        {
                            ID = new Guid("01f62ae4-1f5b-4711-822d-9115c097d0ec"),
                            IsAdmin = false,
                            Password = "Q20YPETN",
                            Username = "PC36"
                        },
                        new
                        {
                            ID = new Guid("7b199a4b-7aa3-49e7-adb2-a3de00a2b219"),
                            IsAdmin = false,
                            Password = "0O63J98R",
                            Username = "PC37"
                        },
                        new
                        {
                            ID = new Guid("852ce1f3-dd93-4077-a26c-501509a34ae8"),
                            IsAdmin = false,
                            Password = "M9XNRF6L",
                            Username = "PC38"
                        },
                        new
                        {
                            ID = new Guid("7ef3dd0e-ce71-4ae2-902e-c24439259fe6"),
                            IsAdmin = false,
                            Password = "2RXNMB6J",
                            Username = "PC39"
                        },
                        new
                        {
                            ID = new Guid("0de489f9-c450-4ac6-9e21-617e063ed347"),
                            IsAdmin = false,
                            Password = "U65Z9RTN",
                            Username = "PC40"
                        },
                        new
                        {
                            ID = new Guid("1440304e-7858-4d24-bf9a-3509783b3960"),
                            IsAdmin = false,
                            Password = "IBWLF3O8",
                            Username = "PC41"
                        },
                        new
                        {
                            ID = new Guid("8c800c5c-3c5b-4392-b725-866e3c697dd8"),
                            IsAdmin = false,
                            Password = "KJ32AVS5",
                            Username = "PC42"
                        },
                        new
                        {
                            ID = new Guid("7a6ac97d-eece-463a-911f-4476018914e6"),
                            IsAdmin = false,
                            Password = "5OXN6Z9W",
                            Username = "PC43"
                        },
                        new
                        {
                            ID = new Guid("d7cd6743-2db2-4836-9ff0-c1adfde75d4e"),
                            IsAdmin = false,
                            Password = "M1EY4WX7",
                            Username = "PC44"
                        },
                        new
                        {
                            ID = new Guid("e1e31491-cda8-414c-9986-1e99609194e0"),
                            IsAdmin = false,
                            Password = "W0JLGBTZ",
                            Username = "PC45"
                        },
                        new
                        {
                            ID = new Guid("a3a89a75-2e57-4552-952a-f79389faa0e0"),
                            IsAdmin = false,
                            Password = "1MWHJ2XK",
                            Username = "PC46"
                        },
                        new
                        {
                            ID = new Guid("6376076a-ea6b-4f3a-b24c-a91d0ef71420"),
                            IsAdmin = false,
                            Password = "EGMB1C3N",
                            Username = "PC47"
                        },
                        new
                        {
                            ID = new Guid("fbfb9c18-c040-4082-b231-df26008fe1e7"),
                            IsAdmin = false,
                            Password = "5HCGNSB9",
                            Username = "PC48"
                        },
                        new
                        {
                            ID = new Guid("f64e86c8-31af-4c16-b8bd-836891a41aee"),
                            IsAdmin = false,
                            Password = "VDFO6H1A",
                            Username = "PC49"
                        },
                        new
                        {
                            ID = new Guid("7cd6878e-2d6c-49a8-8b92-550e5423240a"),
                            IsAdmin = false,
                            Password = "2QCPUJN3",
                            Username = "PC50"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UploadProject.Models.AdminUploadedFile", b =>
                {
                    b.HasOne("UploadProject.Models.CompetitionSession", "CompetitionSession")
                        .WithMany()
                        .HasForeignKey("CompetitionSessionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UploadProject.Models.User", "User")
                        .WithMany("AdminUploadedFiles")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompetitionSession");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UploadProject.Models.CompetitorUploadedFile", b =>
                {
                    b.HasOne("UploadProject.Models.CompetitionSession", "CompetitionSession")
                        .WithMany()
                        .HasForeignKey("CompetitionSessionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UploadProject.Models.User", "User")
                        .WithMany("CompetitorUploadedFiles")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompetitionSession");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UploadProject.Models.User", b =>
                {
                    b.HasOne("UploadProject.Models.CompetitionSession", null)
                        .WithMany("Competitors")
                        .HasForeignKey("CompetitionSessionID");
                });

            modelBuilder.Entity("UploadProject.Models.CompetitionSession", b =>
                {
                    b.Navigation("Competitors");
                });

            modelBuilder.Entity("UploadProject.Models.User", b =>
                {
                    b.Navigation("AdminUploadedFiles");

                    b.Navigation("CompetitorUploadedFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
